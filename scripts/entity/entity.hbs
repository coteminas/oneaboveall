{{#if isMongo}}
import { Entity, BaseEntity, ObjectID, ObjectIdColumn, Column } from "typeorm";
{{else}}
import { Entity, BaseEntity, PrimaryGeneratedColumn, Column } from "typeorm";
{{/if}}
import { ObjectType, Field, ID } from "type-graphql";

@Entity({ name: '{{lowerCase EntityName}}' })
@ObjectType()
export class {{EntityName}} extends BaseEntity {
{{#if isMongo}}
  @Field(() => ID)
  @ObjectIdColumn({ name: '_id' })
  id?: ObjectID;
{{else}}
  @Field(() => ID)
  @PrimaryGeneratedColumn()
  id: number;
{{/if}}
{{#each EntityProps}}

  {{#inArray PropInserted "GraphQL" }}
    {{#is PropType 'SetInCode'}}
  @Field()
    {{else}}
  @Field(() => {{PropType}})
    {{/is}}
  {{/inArray}}
  {{#inArray PropInserted "Database" }}
  @Column()
  {{/inArray}}
  {{PropName}}: {{#is PropType 'SetInCode'}}any{{else}}{{PropType}}{{/is}};
{{/each}}
}

export default {{EntityName}};
